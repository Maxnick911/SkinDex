[versions]
androidImageCropper = "4.6.0"
cameraCore = "1.4.2"
exposedCore = "0.48.0"
flywayCore = "9.22.3"
javaJwt = "4.5.0"
jbcrypt = "0.4"
junitJupiter = "5.8.2"
kotlin = "2.1.20"
agp = "8.10.0"
hilt = "2.55"
kotlinStdlib = "2.1.20"
ktor = "3.1.2"
logbackClassic = "1.4.11"
mpandroidchart = "v3.1.0"
navigation = "2.8.9"
glide = "4.16.0"
compiler = "4.16.0"
navigationSafeArgsGradlePlugin = "2.8.9"
okhttp = "4.12.0"
picasso = "2.8"
postgresql = "42.7.3"
retrofit = "2.11.0"
moshi = "1.15.1"
coreKtx = "1.16.0"
appcompat = "1.7.0"
material = "1.12.0"
activityKtx = "1.10.1"
fragmentKtx = "1.8.6"
constraintlayout = "2.2.1"
lifecycleViewmodelKtx = "2.8.7"
kotlinxCoroutines = "1.10.2"
recyclerview = "1.4.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
securityCrypto = "1.0.0"
slf4jApi = "2.0.17"
tensorflowLite = "2.16.1"
firebaseAppdistributionGradle = "5.1.1"
testng = "6.9.6"
junitJupiterVersion = "5.8.1"

[libraries]
android-image-cropper = { module = "com.vanniktech:android-image-cropper", version.ref = "androidImageCropper" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraCore" }
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "cameraCore" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraCore" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraCore" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-navigation-safe-args-gradle-plugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigationSafeArgsGradlePlugin" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedCore" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedCore" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedCore" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposedCore" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flywayCore" }
io-ktor-ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
java-jwt = { module = "com.auth0:java-jwt", version.ref = "javaJwt" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junitJupiter" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinStdlib" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlinStdlib" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activityKtx" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
compiler = { module = "com.github.bumptech.glide:ksp", version.ref = "compiler" }
mpandroidchart = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "mpandroidchart" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
picasso = { module = "com.squareup.picasso:picasso", version.ref = "picasso" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4jApi" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
tensorflow-lite = { module = "org.tensorflow:tensorflow-lite", version.ref = "tensorflowLite" }
tensorflow-lite-select-tf-ops = { module = "org.tensorflow:tensorflow-lite-select-tf-ops", version.ref = "tensorflowLite" }
firebase-appdistribution-gradle = { group = "com.google.firebase", name = "firebase-appdistribution-gradle", version.ref = "firebaseAppdistributionGradle" }
testng = { group = "org.testng", name = "testng", version.ref = "testng" }
jupiter-junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiterVersion" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }